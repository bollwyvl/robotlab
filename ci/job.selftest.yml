parameters:
  name: Linux
  vmImage: ubuntu-16.04

jobs:
  - job: ${{ parameters.name }}Test
    condition: succeeded()
    dependsOn:
      - ${{ parameters.name }}Build
    pool:
      vmImage: ${{ parameters.vmImage }}

    steps:
      - task: DownloadPipelineArtifact@0
        inputs:
          artifactName: RobotLab for ${{ parameters.name }}
          targetPath: _artifacts/constructor
        displayName: restore installer

      - script:
          - ${{ if not(eq(parameters.name, 'Windows')) }}:
            - bash _artifacts/constructor/RobotLab-*-${{ parameters.name }}-x86_64.sh -fbp _robotlab
          - ${{ if eq(parameters.name, 'Windows') }}:
            - .\RobotLab-*-Windows-x86_64.exe /InstallationType=JustMe /AddToPath=0 /RegisterPython=0 /S /D=_robotlab
        displayName: run installer

      - script:
          - ${{ if not(eq(parameters.name, 'Windows')) }}:
            - . ./_robotlab/bin/activate ./_robotlab && python -m scripts.test robot --headless --in-robotlab
          - ${{ if eq(parameters.name, 'Windows') }}:
            - call .\_robotlab\Scripts\activate .\_robotlab && python -m scripts.test robot --headless --in-robotlab
        displayName: acceptance tests

      - ${{ if eq(parameters.name, 'MacOSX') }}:
        - script: chmod -R 777 _artifacts
          displayName: fix artifact permissions

      - task: PublishTestResults@2
        displayName: publish test results
        inputs:
          testResultsFiles: _artifacts/test_output/**/*.xunit.xml
        condition: always()

      - task: PublishPipelineArtifact@0
        displayName: publish ${{ parameters.name }} robot output
        inputs:
          targetPath: _artifacts/test_output
          artifactName: Robot Output ${{ parameters.name }}
        condition: always()
