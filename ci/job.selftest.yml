parameters:
  products:
    - RobotLab
    # - MiniRobot
    # - ExoRobot
  platforms:
    - name: Linux
      vmImage: ubuntu-16.04
      activate: ""
    - name: MacOSX
      vmImage: macos-10.13
      activate: ""
    - name: Windows
      vmImage: vs2017-win2016
      activate: call activate &&

jobs:
  - ${{ each product in parameters.products }}:
    - ${{ each platform in parameters.platforms }}:
      - job: ${{ product }}${{ platform.name }}Test
        condition: succeeded()
        dependsOn:
          - ${{ product }}${{ platform.name }}Build
        pool:
          vmImage: ${{ platform.vmImage }}

        steps:
          - task: DownloadPipelineArtifact@0
            inputs:
              artifactName: ${{ product }} for ${{ platform.name }}
              targetPath: _artifacts/constructor
            displayName: restore installer

          - ${{ if not(eq(platform.name, 'Windows')) }}:
            - script: bash _artifacts/constructor/${{ product }}-$(ROBOTLAB_VERSION)-${{ platform.name }}-x86_64.sh -fbp _${{ product }}
              displayName: run installer
            - script: . ./_${{ product }}/bin/activate ./_${{ product }} && python -m scripts.test robot ${{ product }} --headless --in-product
              displayName: acceptance tests

          - ${{ if eq(platform.name, 'Windows') }}:
            - script: |
                @echo on
                echo %HOME%
                md "%cd%\_${{ product }}"
                start /wait "" "_artifacts\constructor\${{ product }}-$(ROBOTLAB_VERSION)-Windows-x86_64.exe" /InstallationType=JustMe /AddToPath=0 /RegisterPython=0 /S /D=%cd%\_${{ product }}
              displayName: run installer
            - script: |
                @echo on
                call "%cd%\_${{ product }}\Scripts\activate.bat" "%cd%\_${{ product }}"
                python -m scripts.test robot --headless --in-product ${{ product }}
              displayName: acceptance tests

          - ${{ if eq(platform.name, 'MacOSX') }}:
            - script: chmod -R 777 _artifacts
              displayName: fix artifact permissions

          - task: PublishTestResults@2
            displayName: publish test results
            inputs:
              testResultsFiles: _artifacts/test_output/**/*.xunit.xml
            condition: always()

          - task: PublishPipelineArtifact@0
            displayName: publish robot output
            inputs:
              targetPath: _artifacts/test_output
              artifactName: ${{ product }} ${{ platform.name }} Output
            condition: always()
