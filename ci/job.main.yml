parameters:
  platforms:
    - name: Linux
      vmImage: ubuntu-16.04
      activate: ""
    - name: MacOSX
      vmImage: macos-10.13
      activate: ""
    - name: Windows
      vmImage: vs2017-win2016
      activate: call activate &&
jobs:
  - ${{ each platform in parameters.platforms }}:
    - job: RobotLab${{ platform.name }}Build
      condition: succeeded()
      dependsOn:
        - lab
        - conda_noarch
        - ${{ if eq(platform.name, 'Windows') }}:
          - conda_win
      pool:
        vmImage: ${{ platform.vmImage }}

      steps:
        - template: steps.restore.yml
          parameters:
            name: ${{ platform.name }}

        - task: DownloadPipelineArtifact@0
          inputs:
            artifactName: robotlab app_dir
            targetPath: _artifacts/app_dir
          displayName: restore jupyterlab

        - template: steps.conda.yml
          parameters:
            name: ${{ platform.name }}
            envPath: ci/env-main.yml

        - script: ${{ platform.activate }} python -m scripts.build conda
          displayName: build/test remaining packages

        - script: ${{ platform.activate }} python -m scripts.build constructor
          displayName: build installer

        - ${{ if eq(platform.name, 'MacOSX') }}:
          - script: chmod -R 777 _artifacts
            displayName: fix artifact permissions

        - task: PublishPipelineArtifact@1
          displayName: publish installer
          inputs:
            targetPath: _artifacts/constructor
            artifactName: RobotLab for ${{ platform.name }}
          condition: succeeded()
